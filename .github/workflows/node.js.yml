# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ,"dev"]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    - run: rm -rf ./client/.parcel-cache

    - name: Collect coverage from client
      uses: ArtiomTr/jest-coverage-report-action@v2
      with:
        working-directory: client

    - name: Collect coverage from server
      uses: ArtiomTr/jest-coverage-report-action@v2
      with:
        working-directory: server

    - name: Zip artifact for deployment
      run: zip release.zip ./* -r

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: node-app
        path: ./release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app
      - name: unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'ModernSnack'
          slot-name: 'Production'
          publish-profile: '<publishData><publishProfile profileName="ModernSnack - Web Deploy" publishMethod="MSDeploy" publishUrl="modernsnack.scm.azurewebsites.net:443" msdeploySite="ModernSnack" userName="$ModernSnack" userPWD="AtMk2KpqzoQPLx46P7vlyXT3sn7pK92d1aoF8PmMi2R6vzvMboyoxSNmGpGd" destinationAppUrl="https://modernsnack.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="ModernSnack - FTP" publishMethod="FTP" publishUrl="ftps://waws-prod-am2-611.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="ModernSnack\$ModernSnack" userPWD="AtMk2KpqzoQPLx46P7vlyXT3sn7pK92d1aoF8PmMi2R6vzvMboyoxSNmGpGd" destinationAppUrl="https://modernsnack.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="ModernSnack - Zip Deploy" publishMethod="ZipDeploy" publishUrl="modernsnack.scm.azurewebsites.net:443" userName="$ModernSnack" userPWD="AtMk2KpqzoQPLx46P7vlyXT3sn7pK92d1aoF8PmMi2R6vzvMboyoxSNmGpGd" destinationAppUrl="https://modernsnack.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>'
          package: .



